"use client"

import { Main_Auth } from './auth/Main_Auth'
import { useAppDispatch, useAppSelector } from '@/hook/redux'
import { setIsLoginShow } from '@/Redux/MainLoginSlice'
import React, { useEffect, useState } from 'react'

import '../../styles/main/main_header.scss'
import { useMediaQuery } from '@/hook/width'
import Link from 'next/link'
// import Logout from './auth/LogOut'


export const MainHeader = () => {

  const isMedia640 = useMediaQuery(640)

  const [activeButton, setActiveButton] = useState<string | null>(null);

  const [isLoaded, setIsLoaded] = useState<boolean>(false);

  const handleButtonClick = (buttonId: string) => {
    setActiveButton(buttonId);
    
  };

const {isLoginShow} = useAppSelector(state => state.mainLogin)




const headerClass = !isMedia640 ? 'main_header-container' : 'mobile-menu';

console.log(isMedia640)

const dispatch = useAppDispatch()

const handlerProfile = () => {
  dispatch(setIsLoginShow(true))
}



useEffect(() => {
 
  setIsLoaded(true);

}, [isMedia640]);

console.log(activeButton)
if (!isLoaded) {

  return <div>Loading...</div>;
}

  return (
 

<header className={headerClass} >

{(!isMedia640) && <Link href="/">
<button
 className={`btn-main-menu ${activeButton === 'button6' ? 'active' : ''}`}
 onClick={() => handleButtonClick('button6')}
>
логотип
</button>
</Link>}

<nav className='buttons-wrapper'>


 {(isMedia640) && 
 <Link href="/">
 <button 
 className={`btn-main-menu ${activeButton === 'button1' ? 'active' : ''}`}
 onClick={() => handleButtonClick('button1')}
 >
<svg width="50px" height="50px" viewBox="0 -0.5 25 25" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clipRule="evenodd" d="M18.867 15.8321L18.873 10.0391L14.75 5.92908C13.5057 
4.69031 11.4942 4.69031 10.25 5.92908L6.13599 10.0291V15.8291C6.1393 17.5833 7.56377 19.0028 9.31799 
19.0001H15.685C17.438 19.0029 18.862 17.5851 18.867 15.8321Z" stroke="#fff" strokeWidth="1.5" strokeLinecap="round" 
strokeLinejoin="round"/>
<path d="M19.624 6.01807C19.624 5.60385 19.2882 5.26807 18.874 5.26807C18.4598 5.26807 18.124 5.60385 18.124
 6.01807H19.624ZM18.874 10.0391H18.124C18.124 10.2384 18.2033 10.4295 18.3445 10.5702L18.874 10.0391ZM19.9705
  12.1912C20.2638 12.4837 20.7387 12.4829 21.0311 12.1896C21.3236 11.8962 21.3229 11.4214 21.0295 11.1289L19.9705 
  12.1912ZM6.66552 10.5602C6.95886 10.2678 6.95959 9.79289 6.66714 9.49955C6.3747 9.20621 5.89982 9.20548
   5.60648 9.49793L6.66552 10.5602ZM3.97048 11.1289C3.67714 11.4214 3.67641 11.8962 3.96886 12.1896C4.2613 
   12.4829 4.73618 12.4837 5.02952 12.1912L3.97048 11.1289ZM13.75 19.0001C13.75 19.4143 14.0858 19.7501 14.5 
   19.7501C14.9142 19.7501 15.25 19.4143 15.25 19.0001H13.75ZM9.75 19.0001C9.75 19.4143 10.0858 19.7501 10.5 
   19.7501C10.9142 19.7501 11.25 19.4143 11.25 19.0001H9.75ZM18.124 6.01807V10.0391H19.624V6.01807H18.124ZM18.3445 
   10.5702L19.9705 12.1912L21.0295 11.1289L19.4035 9.50792L18.3445 10.5702ZM5.60648 9.49793L3.97048 
   11.1289L5.02952 12.1912L6.66552 10.5602L5.60648 9.49793ZM15.25 19.0001V17.2201H13.75V19.0001H15.25ZM15.25 
   17.2201C15.25 15.7013 14.0188 14.4701 12.5 14.4701V15.9701C13.1904 15.9701 13.75 16.5297 13.75 17.2201H15.25ZM12.5 
   14.4701C10.9812 14.4701 9.75 15.7013 9.75 17.2201H11.25C11.25 16.5297 11.8096 15.9701 12.5 15.9701V14.4701ZM9.75
    17.2201V19.0001H11.25V17.2201H9.75Z" fill="#fff"/>
</svg>

  </button>
  </Link>
  }


<button 
 className={`btn-main-menu ${activeButton === 'button2' ? 'active' : ''}`}
 onClick={() => handleButtonClick('button2')}
>
<svg width="40px" height="40px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M14.9536 14.9458L21 21M17 10C17 13.866 13.866 17 10 17C6.13401 17 3 13.866 3 10C3 6.13401 
6.13401 3 10 3C13.866 3 17 6.13401 17 10Z" stroke="#fff" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
</svg>
</button>

<Link href="/subjects">
<button 
 className={`btn-main-menu ${activeButton === 'button3' ? 'active' : ''}`}
 onClick={() => handleButtonClick('button3')}
>
<svg width="60px" height="60px" viewBox="0 0 48 48" id="Layer_1" version="1.1"
 xmlns="http://www.w3.org/2000/svg" ><path className="st0" fill='#fff' d="M12.288,23.452h1.803c-0.298,0.203-0.582,0.431-0.842,0.691c-1.091,1.091-1.691,2.546-1.691,4.097  
c0,3.191,2.597,5.788,5.788,5.788h2.378v1.587c0,0.226,0.152,0.424,0.371,0.483c0.218,0.06,0.449-0.037,0.563-0.233l1.894-3.281  l1.894,3.29c0.091,0.158,0.258,0.251,0.434,0.251c0.043,0,0.086-0.005,0.129-0.017c0.219-0.058,0.371-0.256,0.371-0.483v-1.597H41  c0.276,0,0.5-0.224,0.5-0.5v-1.609c0-0.104-0.039-0.195-0.093-0.274c-0.006-0.009-0.004-0.021-0.01-0.03  c-0.745-0.973-1.139-2.14-1.139-3.375s0.394-2.402,1.139-3.375c0.007-0.009,0.004-0.021,0.01-0.03  c0.054-0.08,0.093-0.171,0.093-0.274v-1.609c0-0.276-0.224-0.5-0.5-0.5h-4.558v-1.109c0-0.01-0.005-0.019-0.006-0.029  c-0.001-0.021-0.008-0.038-0.012-0.058c-0.012-0.067-0.036-0.126-0.071-0.181c-0.007-0.011-0.006-0.025-0.014-0.036  c-0.745-0.973-1.139-2.14-1.139-3.375s0.394-2.402,1.139-3.375c0.008-0.011,0.007-0.025,0.014-0.036  c0.036-0.055,0.059-0.114,0.071-0.181c0.004-0.02,0.011-0.038,0.012-0.058c0.001-0.01,0.006-0.019,0.006-0.029v-1.609  c0-0.276-0.224-0.5-0.5-0.5H12.288c-1.551,0-3.006,0.601-4.097,1.691S6.5,16.112,6.5,17.664C6.5,20.855,9.097,23.452,12.288,23.452z   M25.378,28.74h13.918c0.071,0.95,0.337,1.856,0.795,2.679H25.378V28.74z M39.297,27.74H24.878h-4.654h-3.568  c-0.276,0-0.5,0.224-0.5,0.5s0.224,0.5,0.5,0.5h3.068v2.679h-2.204c-1.753,0-3.179-1.426-3.179-3.179  c0-0.851,0.33-1.649,0.927-2.247c0.609-0.601,1.409-0.932,2.251-0.932h22.571C39.633,25.884,39.368,26.789,39.297,27.74z   M24.378,33.751l-1.395-2.415c-0.09-0.154-0.254-0.249-0.432-0.249c0,0,0,0,0,0c-0.178,0-0.342,0.094-0.432,0.248l-1.396,2.414  v-0.221v-1.609V28.74h3.654v3.179v1.609V33.751z M25.378,33.028v-0.609H40.5v0.609H25.378z M40.5,24.061H17.521  c-1.107,0-2.156,0.433-2.956,1.223c-0.789,0.789-1.223,1.838-1.223,2.956c0,2.304,1.875,4.179,4.179,4.179h2.204v0.609h-2.378  c-2.64,0-4.788-2.148-4.788-4.788c0-1.284,0.497-2.487,1.398-3.39c0.902-0.902,2.105-1.398,3.39-1.398h18.596H40.5V24.061z   M34.231,17.164H11.598c-0.276,0-0.5,0.224-0.5,0.5s0.224,0.5,0.5,0.5h22.633c0.071,0.949,0.329,1.857,0.786,2.679H12.463  c-1.753,0-3.179-1.426-3.179-3.179c0-0.851,0.33-1.649,0.927-2.247c0.609-0.601,1.409-0.932,2.251-0.932h22.554  C34.56,15.306,34.302,16.215,34.231,17.164z M8.898,14.274c0.902-0.902,2.105-1.398,3.39-1.398h23.154v0.609H12.463  c-1.107,0-2.156,0.433-2.956,1.223c-0.789,0.789-1.223,1.838-1.223,2.956c0,2.304,1.875,4.179,4.179,4.179h22.979v0.609H17.346  h-5.058c-2.64,0-4.788-2.148-4.788-4.788C7.5,16.379,7.997,15.176,8.898,14.274z"/>
</svg>
</button>
</Link>

<Link href="/cart">
<button 
 className={`btn-main-menu ${activeButton === 'button4' ? 'active' : ''}`}
 onClick={() => handleButtonClick('button4')}
>
<svg width="40px" height="40px" viewBox="0 0 24 24" fill="#fff" xmlns="http://www.w3.org/2000/svg">
<path fillRule="evenodd" clipRule="evenodd" d="M8.4179 3.25077C8.69861 2.65912 9.30146 2.25 9.99986 
2.25H13.9999C14.6983 2.25 15.3011 2.65912 15.5818 3.25077C16.2654 3.25574 16.7981 3.28712 17.2737
 3.47298C17.8418 3.69505 18.3361 4.07255 18.6998 4.5623C19.0667 5.05639 19.2389 5.68968 19.476 
 6.56133C19.4882 6.60604 19.5005 6.65137 19.513 6.69735L20.1039 8.86428C20.4914 9.06271 20.8304 
 9.32993 21.1133 9.6922C21.7353 10.4888 21.8454 11.4377 21.7348 12.5261C21.6274 13.5822 21.2949
  14.9122 20.8787 16.577L20.8523 16.6824C20.5891 17.7352 20.3755 18.59 20.1213 19.2572C19.8563 19.9527 
  19.5199 20.5227 18.9653 20.9558C18.4107 21.3888 17.7761 21.5769 17.0371 21.6653C16.3282 21.75 15.4472
  21.75 14.362 21.75H9.63771C8.55255 21.75 7.67147 21.75 6.96266 21.6653C6.22365 21.5769 5.58901 21.3888 
  5.03439 20.9558C4.47977 20.5227 4.14337 19.9527 3.8784 19.2572C3.62426 18.5901 3.41058 17.7353 3.1474 
  16.6825L3.121 16.5769C2.70479 14.9121 2.37229 13.5822 2.26492 12.5261C2.15427 11.4377 2.26442 10.4888 
  2.88642 9.6922C3.16927 9.32993 3.50834 9.06271 3.89582 8.86428L4.48667 6.69735C4.49921 6.65137 4.51154 
  6.60604 4.5237 6.56134C4.76077 5.68968 4.93302 5.05639 5.29995 4.5623C5.66367 4.07255 6.15788 3.69505
   6.72607 3.47298C7.20162 3.28712 7.73436 3.25574 8.4179 3.25077ZM8.41931 4.75219C7.75748 4.75888 7.4919 
   4.78416 7.2721 4.87007C6.96615 4.98964 6.70003 5.19291 6.50419 5.45662C6.32808 5.69376 6.22474 6.02508 
   5.93384 7.09195L5.58026 8.38869C6.61806 8.24996 7.95786 8.24998 9.62247 8.25H14.3772C16.0419 8.24998 
   17.3817 8.24996 18.4195 8.38869L18.0659 7.09194C17.775 6.02508 17.6716 5.69377 17.4955 5.45663C17.2997 
   5.19291 17.0336 4.98964 16.7276 4.87007C16.5078 4.78416 16.2422 4.75888 15.5804 4.75219C15.2991 5.34225 
   14.6971 5.75 13.9999 5.75H9.99986C9.30262 5.75 8.70062 5.34225 8.41931 4.75219ZM9.99986 3.75C9.86179 3.75 
   9.74986 3.86193 9.74986 4C9.74986 4.13807 9.86179 4.25 9.99986 4.25H13.9999C14.1379 4.25 14.2499 4.13807 
   14.2499 4C14.2499 3.86193 14.1379 3.75 13.9999 3.75H9.99986ZM5.69971 9.88649C4.78854 10.0183 4.34756 
   10.2582 4.06873 10.6153C3.78989 10.9725 3.66411 11.4584 3.75723 12.3744C3.85233 13.3099 4.15656 14.5345
    4.59127 16.2733C4.86853 17.3824 5.06163 18.1496 5.28013 18.7231C5.49144 19.2778 5.69835 19.5711 5.95751 
    19.7735C6.21667 19.9758 6.5514 20.1054 7.14076 20.1759C7.75015 20.2488 8.54133 20.25 9.68452
    20.25H14.3152C15.4584 20.25 16.2496 20.2488 16.859 20.1759C17.4483 20.1054 17.783 19.9758 
    18.0422 19.7735C18.3014 19.5711 18.5083 19.2778 18.7196 18.7231C18.9381 18.1496 19.1312 17.3824 
    19.4084 16.2733C19.8432 14.5345 20.1474 13.3099 20.2425 12.3744C20.3356 11.4584 20.2098 10.9725 
    19.931 10.6153C19.6522 10.2582 19.2112 10.0183 18.3 9.88649C17.3694 9.75187 16.1075 9.75 14.3152 
    9.75H9.68452C7.89217 9.75 6.63034 9.75187 5.69971 9.88649Z" fill="#fff"/>
</svg>
</button>
</Link>

       {isLoginShow && <Main_Auth />}
    <button 
     className={`btn-main-menu ${activeButton === 'button5' ? 'active' : ''}`}
      onClick={() => {
        handlerProfile();
        handleButtonClick('button5');
      }}
    >
    <svg width="40px" height="40px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path opacity="1" d="M12.1207 12.78C12.0507 12.77 11.9607 12.77 11.8807 12.78C10.1207 12.72 8.7207 
11.28 8.7207 9.50998C8.7207 7.69998 10.1807 6.22998 12.0007 6.22998C13.8107 6.22998 15.2807 7.69998 15.2807 9.50998C15.2707
 11.28 13.8807 12.72 12.1207 12.78Z" stroke="#fff" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
<path opacity="1" d="M18.7398 19.3801C16.9598 21.0101 14.5998 22.0001 11.9998 22.0001C9.39977 22.0001 
7.03977 21.0101 5.25977 19.3801C5.35977 18.4401 5.95977 17.5201 7.02977 16.8001C9.76977 14.9801 14.2498 14.9801
 16.9698 16.8001C18.0398 17.5201 18.6398 18.4401 18.7398 19.3801Z" stroke="#fff" strokeWidth="1.5" strokeLinecap="round"
  strokeLinejoin="round"/>
<path d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z"
 stroke="#fff" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
</svg>
    </button>

    </nav>

    {/* <Logout /> */}

    </header> 
   
  ) 
}
